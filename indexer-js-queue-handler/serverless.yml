#org: pagoda
#app: queryapi
service: queryapi
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs16.x
  region: eu-central-1
  timeout: 120
  environment:
    REGION: ${self:provider.region}
    STAGE: ${opt:stage, 'dev'}
    HASURA_ENDPOINT: ${env:HASURA_ENDPOINT}
    HASURA_ENDPOINT_V2: ${env:HASURA_ENDPOINT_V2}
    HASURA_ADMIN_SECRET: ${env:HASURA_ADMIN_SECRET}
    PG_ADMIN_USER: ${env:PG_ADMIN_USER}
    PG_ADMIN_PASSWORD: ${env:PG_ADMIN_PASSWORD}
    PG_ADMIN_DATABASE: ${env:PG_ADMIN_DATABASE}
    PG_HOST: ${env:PG_HOST}
    PG_PORT: ${env:PG_PORT}
  tracing:
    lambda: true #enable X-Ray tracing
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "cloudwatch:PutMetricData"
      Resource: "*"
#  cfnRole: arn:aws:iam::754641474505:role/queryapi-cloudformation

# See https://github.com/getlift/lift/blob/master/docs/queue.md for configuration of SQS constructs
constructs:
  indexer-runner:
    type: queue
    fifo: true
    maxRetries: 1
    worker:
      handler: handler.consumer
      timeout: 120 # 12 minutes as lift multiplies this value by 6 (https://github.com/getlift/lift/blob/master/docs/queue.md#retry-delay)
  startFromBlock-runner:
    type: queue
    fifo: true
    maxRetries: 1
    #    batchSize: 100
    worker:
      handler: handler.consumer
      timeout: 120 # 12 minutes as lift multiplies this value by 6 (https://github.com/getlift/lift/blob/master/docs/queue.md#retry-delay)

functions:
  socialLagMetricsWriter:
    handler: social-lag-metrics-writer.handler
    events:
      - schedule: rate(1 minute)

plugins:
  - serverless-lift
#  - serverless-offline
