syntax = "proto3";
package spec;

service Runner {
    // Starts a new Runner stream worker
    rpc StartExecutor (StartExecutorRequest) returns (StartExecutorResponse);

    // Updates an existing Runner stream worker
    rpc UpdateExecutor (UpdateExecutorRequest) returns (UpdateExecutorResponse);

    // Stops an existing Runner stream worker
    rpc StopExecutor (StopExecutorRequest) returns (StopExecutorResponse);

    // Lists all Runner stream workers
    rpc ListExecutors (ListExecutorsRequest) returns (ListExecutorsResponse);
}

// Start Executor Request 
message StartExecutorRequest {
    string stream_id = 1;
    string redis_stream = 2;
    string indexer_config = 3; // JSON containing code, schema, etc.
}

// Start Executor Response 
message StartExecutorResponse {
    string stream_id = 1;
}

// Update Executor Request 
message UpdateExecutorRequest {
    string stream_id = 1;
    string indexer_config = 2; // JSON containing code, schema, etc.
}

// Update Executor Response 
message UpdateExecutorResponse {
    string stream_id = 1;
}

// Stop Executor Request
message StopExecutorRequest {
    string stream_id = 1;
}

// Stop Executor Response
message StopExecutorResponse {
    string stream_id = 1;
}

// List Executor Request
message ListExecutorsRequest {
}

// List Executor Response
message ListExecutorsResponse {
    // List of all streams, including stopped or crashed ones
    repeated ExecutorInfo streams = 1;
}

// Information about a single BlockExecutor instance.
message ExecutorInfo {
    string stream_id = 1;
    string indexer_name = 2;
    string status = 3;
}
