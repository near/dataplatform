version: "3.9"  # optional since v1.27.0
services:

  actions_queryapi_coordinator:
    build:
      context: ./indexer
      args:
        - chain_id=mainnet
    links:
      - redis
    environment:
      - REDIS_CONNECTION_STRING=redis://redis
      - LAKE_AWS_SECRET_ACCESS_KEY=
      - LAKE_AWS_ACCESS_KEY=
      - QUEUE_AWS_ACCESS_KEY=
      - QUEUE_AWS_SECRET_ACCESS_KEY=
      - QUEUE_URL=https://sqs.eu-central-1.amazonaws.com/754641474505/morgan-test.fifo
      - START_FROM_BLOCK_QUEUE_URL=https://sqs.eu-central-1.amazonaws.com/754641474505/morgan-test.fifo
      - PORT=9180
      - REGISTRY_CONTRACT_ID=dev-queryapi.dataplatform.near
      - AWS_QUEUE_REGION=eu-central-1
    command:
      - mainnet
      - from-interruption

  runner:
    build:
      context: ./indexer-js-queue-handler
    depends_on:
    - "graphql-engine"
    - "redis"
    env_file: .env
    environment:
    - REGION=eu-central-1
    - HASURA_ENDPOINT=http://graphql-engine:8080
    - HASURA_ADMIN_SECRET=
    - REDIS_CONNECTION_STRING=redis://redis
    - AWS_ACCESS_KEY_ID=
    - AWS_SECRET_ACCESS_KEY=

  redis:
    image: redis
    command:
      - redis-server
      - "--save 60 1"
      - "--loglevel warning"
    volumes:
      - ./redis/data:/data
    ports:
      - "6379:6379"

  postgres:
    image: postgres:12
    restart: always
    volumes:
    - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgrespassword
    ports:
      - "5432:5432"

  graphql-engine:
    image: hasura/graphql-engine:latest
    ports:
    - "8080:8080"
    depends_on:
    - "postgres"
    restart: always
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      # HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
      
volumes:
  db_data:
