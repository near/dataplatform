syntax = "proto3";

package blockstreamer;

// The BlockStreamer service provides RPCs to manage BlockStream instances.
service BlockStreamer {
    // Starts a new BlockStream instance.
    rpc StartStream (StartStreamRequest) returns (StartStreamResponse);

    // Stops an existing BlockStream instance.
    rpc StopStream (StopStreamRequest) returns (StopStreamResponse);

    // Lists all current BlockStream instances.
    rpc ListStreams (ListStreamsRequest) returns (ListStreamsResponse);
}

// Request message for starting a BlockStream.
message StartStreamRequest {
    // Parameters required to start a BlockStream.
    int64 start_block_height = 1;
    string indexer_config = 2;
}

// Response message for starting a BlockStream.
message StartStreamResponse {
    // ID or handle of the started BlockStream.
    string stream_id = 1;
}

// Request message for stopping a BlockStream.
message StopStreamRequest {
    // ID or handle of the BlockStream to stop.
    string stream_id = 1;
}

// Response message for stopping a BlockStream.
message StopStreamResponse {
    // Confirmation message or status.
    string status = 1;
}

// Request message for listing BlockStreams.
message ListStreamsRequest {
    // Optional filters or parameters for listing streams.
}

// Response message for listing BlockStreams.
message ListStreamsResponse {
    // List of active BlockStreams.
    repeated StreamInfo streams = 1;
}

// Information about a single BlockStream instance.
message StreamInfo {
    string stream_id = 1;
    int64 start_block_height = 2;
    string indexer_name = 3;
    string chain_id = 4;
    string status = 5;
}
